<?xml version="1.0" encoding="UTF-8"?>
<launch>
  <!-- We resume the logic in empty_world.launch, changing only the name of the world to be launched -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="amazonrobot_1_warehouse.world"/> <!-- Note: the world_name is with respect to GAZEBO_RESOURCE_PATH environmental variable -->
    <arg name="paused" value="false"/>
    <arg name="use_sim_time" value="true"/>
    <arg name="gui" value="true"/>
    <arg name="headless" value="false"/>
    <arg name="debug" value="false"/>
    <arg name="verbose" default="true"/>
  </include>

  <!-- <node pkg="laser_filters" type="scan_to_scan_filter_chain" name="laser_filter">
    <rosparam command="load" file="./hokuyo_config.yaml" /> 
    <remap from="scan" to="amazon_warehouse_robot/laser/scan" />
  </node> -->

  <!-- Used to load map generated by gmapping -->
  <node name="map_server" pkg="map_server" type="map_server" args="./maps/map.yaml">
    <param name="frame_id" value="map"/>
  </node>

  <!-- Nodes for the main robot -->
  <group ns="amazon_warehouse_robot">
    <!-- Main robot laser to base transform -->
    <node pkg="tf" type="static_transform_publisher" name="base_to_laser_main" 
      args="0.139000 0.000000 0.15 0.000000 0.000000 0.000000 /amazon_warehouse_robot/base /amazon_warehouse_robot/hokuyo_link 20" />

    <!-- AMCL params. Used to generate map to odom transform -->
    <arg name="use_map_topic"   default="true"/>
    <arg name="scan_topic"      default="amazon_warehouse_robot/laser/scan"/> 
    <arg name="odom_frame_id"   default="amazon_warehouse_robot/odom"/>
    <arg name="base_frame_id"   default="amazon_warehouse_robot/base"/>
    <arg name="global_frame_id" default="map"/>

    <node pkg="amcl" type="amcl" name="amcl"  output="screen">
      <param name="use_map_topic" value="$(arg use_map_topic)"/>
      <param name="odom_model_type" value="diff"/>
      <param name="gui_publish_rate" value="10.0"/>
      <param name="laser_max_beams" value="60"/>
      <param name="laser_max_range" value="10.0"/>
      <param name="odom_frame_id" value="$(arg odom_frame_id)"/>
      <param name="base_frame_id" value="$(arg base_frame_id)"/>
      <remap from="scan" to="$(arg scan_topic)"/>
      <param name="global_frame_id" value="$(arg global_frame_id)"/>
    </node>
    
    <!-- Move base node. Used for global and local navigation -->
    <node pkg="move_base" type="move_base" respawn="false" name="move_base" output="screen">
      <rosparam file="./config/costmap_common_params.yaml" command="load" ns="global_costmap" /> 
      <rosparam file="./config/costmap_common_params.yaml" command="load" ns="local_costmap" />
      <rosparam file="./config/local_costmap_params.yaml" command="load" />
      <rosparam file="./config/global_costmap_params.yaml" command="load" /> 
      <rosparam file="./config/base_local_planner_params.yaml" command="load" />
      <remap from="cmd_vel" to="/move_base/cmd_vel"/>
    </node>

    <!-- Multiplexer is used to choose one controller at a time -->
    <node pkg="nodelet" type="nodelet" name="nodelet_manager" args="manager"/>
    <node pkg="nodelet" type="nodelet" name="cmd_vel_mux" args="load yocs_cmd_vel_mux/CmdVelMuxNodelet nodelet_manager">
      <remap from="/cmd_vel_mux/output/cmd_vel"           to="/amazon_warehouse_robot/cmd_vel" />
      <param name="yaml_cfg_file" value="./config/mux_params.yaml"/>
    </node>
  </group>

  <!-- Nodes for second patrol robot -->
  <group ns="amazon_warehouse_robot_patrol">
    <!-- Secondary robot laser to base transform -->
    <node pkg="tf" type="static_transform_publisher" name="base_to_laser_patrol" 
      args="0.139000 0.000000 0.15 0.000000 0.000000 0.000000 /amazon_warehouse_robot_patrol/base /amazon_warehouse_robot_patrol/hokuyo_link 20" />

    <!-- AMCL params for patrol robot. Used to generate map to odom transform -->
    <node pkg="amcl" type="amcl" name="amcl_patrol"  output="screen">
      <param name="use_map_topic" value="true"/>
      <param name="odom_model_type" value="diff"/>
      <param name="gui_publish_rate" value="10.0"/>
      <param name="laser_max_beams" value="60"/>
      <param name="laser_max_range" value="10.0"/>
      <param name="odom_frame_id" value="amazon_warehouse_robot_patrol/odom"/>
      <param name="base_frame_id" value="amazon_warehouse_robot_patrol/base"/>
      <remap from="scan" to="amazon_warehouse_robot_patrol/laser/scan"/>
      <param name="global_frame_id" value="map"/>
    </node>

    <!-- Move base node for patrol robot. Used for global and local navigation -->
    <node pkg="move_base" type="move_base" respawn="false" name="move_base" output="screen">
      <rosparam file="./config/costmap_common_params.yaml" command="load" ns="global_costmap" /> 
      <rosparam file="./config/costmap_common_params.yaml" command="load" ns="local_costmap" />
      <rosparam file="./config/local_costmap_params.yaml" command="load" />
      <rosparam file="./config/global_costmap_params.yaml" command="load" /> 
      <rosparam file="./config/base_local_planner_params.yaml" command="load" />
      <remap from="cmd_vel" to="/move_base/cmd_vel"/>
    </node>
  </group>

</launch>
