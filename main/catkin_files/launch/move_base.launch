<launch>
  <master auto="start"/>
  <arg name="scan_topic" default="odometry/filtered"/>

  <node name="map_server" pkg="map_server" type="map_server" args="$(find amazon_navigation)/maps/map.yaml">
    <param name="frame_id" value="map"/>
  </node>
   
  <node pkg="gmapping" type="slam_gmapping" name="slam_gmapping">
    <rosparam>
      odom_frame: amazon_warehouse_robot/odom
      base_frame: amazon_warehouse_robot/base
      map_frame: map

      map_update_interval: 5 # Publish new map

      maxUrange: 29 # Should be just less than sensor range
      particles: 500 # Increased from 80
      maxRange: 31 # Should be just greater than sensor range

      # Update frequencies
      linearUpdate: 0.5
      angularUpdate: 0.1
      temporalUpdate: -1.0
      resampleThreshold: 0.5
      minimumScore: 50
      # Initial Map Size
      xmin: -20.0
      ymin: -20.0
      xmax: 20.0
      ymax: 20.0
      delta: 0.20

      # All default
      sigma: 0.05
      kernelSize: 1
      lstep: 0.05
      astep: 0.05
      iterations: 5
      lsigma: 0.075
      ogain: 3.0
      lskip: 0
      llsamplerange: 0.01
      llsamplestep: 0.01
      lasamplerange: 0.005
      lasamplestep: 0.005
    </rosparam>
    <remap from="scan" to="amazon_warehouse_robot/laser/scan"/>
  </node>
    
  <node pkg="move_base" type="move_base" respawn="false" name="move_base" output="screen">
    <rosparam file="$(find amazon_navigation)/config/costmap_common_params.yaml" command="load" ns="global_costmap" /> 
    <rosparam file="$(find amazon_navigation)/config/costmap_common_params.yaml" command="load" ns="local_costmap" />
    <rosparam file="$(find amazon_navigation)/config/local_costmap_params.yaml" command="load" />
    <rosparam file="$(find amazon_navigation)/config/global_costmap_params.yaml" command="load" /> 
    <rosparam file="$(find amazon_navigation)/config/base_local_planner_params.yaml" command="load" />
  </node>

</launch> 
